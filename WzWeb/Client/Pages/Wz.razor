@page "/"
@page "/wz"
@using WzWeb.Shared
@using Microsoft.AspNetCore.WebUtilities
@using Newtonsoft.Json;
@using WzWeb.Client.Services;
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IBrowserService BrowserService

@if (node == null)
{
    <Loading></Loading>
}
else
{
    <BreadCrumb Path=@(BrowserService.NodePath)></BreadCrumb>
    <div class="row">
        <NodeList CurrentNode="@node"></NodeList>
        @if (node.Type == NodeType.Wz_File)
        {
            <div class="col-md-6">
                <FileTable CurrentNode=@node></FileTable>
            </div>
        }
        else if (node.Type == NodeType.Wz_Png)
        {
            <div class="col-md-6">
                <PngComponent CurrentNode="@node"></PngComponent>
            </div>
        }
        else if (node.Type == NodeType.Wz_Uol)
        {
            <div class="col-md-12">
                <UolComponent CurrentNode="@node"></UolComponent>
            </div>
        }
        else
        {
            <div class="col-md-9">
                <dl>
                    <dt>@node.Text</dt>
                    <dd>@node.Value</dd>
                </dl>
            </div>
        }
    </div>
}

@code {

    private Node node;

    protected override async Task OnInitializedAsync()
    {
        var query = new Uri(NavigationManager.Uri).Query;

        if (QueryHelpers.ParseQuery(query).TryGetValue("path", out var value))
        {
            BrowserService.NodePath = value;
        }

        BrowserService.NodePath = BrowserService.NodePath ?? "Base";
        node = await Http.GetFromJsonAsync<Node>($"api/Maple/GetNode?path={ BrowserService.NodePath}");

    }

}
